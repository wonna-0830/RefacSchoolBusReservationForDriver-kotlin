package com.example.refac_driverapp

import android.content.Intent
import android.os.Bundle
import android.os.Handler
import android.os.Looper
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.CheckBox
import android.widget.EditText
import android.widget.ProgressBar
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.OnBackPressedCallback
import com.google.firebase.auth.FirebaseAuth
import androidx.core.content.edit
import com.google.firebase.database.FirebaseDatabase

class Login : ComponentActivity() {
    private lateinit var mEtEmail: EditText
    private lateinit var mEtPwd: EditText
    private lateinit var mBtnLogin: Button
    private lateinit var mBtnRegister: Button
    private lateinit var autoLogin: CheckBox
    private lateinit var auth: FirebaseAuth
    private var doubleBackToExitPressedOnce = false
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_login)

        auth = FirebaseAuth.getInstance()

        mEtEmail = findViewById(R.id.et_email)
        mEtPwd = findViewById(R.id.et_pwd)
        mBtnLogin = findViewById(R.id.btn_login)
        mBtnRegister = findViewById(R.id.btn_register)
        autoLogin = findViewById(R.id.autoLogin)
        autoLogin.isChecked = false


        mBtnLogin.setOnClickListener {
            val strEmail = mEtEmail.text.toString()
            val strPwd = mEtPwd.text.toString()
            val checkBoxAutoLogin = findViewById<CheckBox>(R.id.autoLogin)

            when {
                strEmail.isEmpty() -> {
                    Toast.makeText(this, "Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.", Toast.LENGTH_SHORT).show()
                    return@setOnClickListener
                }
                strPwd.isEmpty() -> {
                    Toast.makeText(this, "ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.", Toast.LENGTH_SHORT).show()
                    return@setOnClickListener
                }
                !strEmail.contains("@") -> {
                    Toast.makeText(this, "ÏïåÎßûÏßÄ ÏïäÏùÄ Ïù¥Î©îÏùº ÌòïÏãùÏûÖÎãàÎã§.", Toast.LENGTH_SHORT).show()
                    return@setOnClickListener
                }
            }


            auth.signInWithEmailAndPassword(strEmail, strPwd)
                .addOnCompleteListener(this) { task ->
                    if (task.isSuccessful) {
                        val user = auth.currentUser
                        val uid = user?.uid

                        if (uid != null) {
                            // Realtime DBÏóêÏÑú isBanned ÌôïÏù∏
                            val userRef =
                                FirebaseDatabase.getInstance().getReference("drivers").child(uid)
                            userRef.get().addOnSuccessListener { snapshot ->
                                val isBanned =
                                    snapshot.child("isBanned").getValue(Boolean::class.java)
                                        ?: false

                                if (isBanned) {
                                    Toast.makeText(
                                        this,
                                        "Ï†ïÏßÄÎêú Í≥ÑÏ†ïÏûÖÎãàÎã§. Í¥ÄÎ¶¨ÏûêÏóêÍ≤å Î¨∏ÏùòÌïòÏÑ∏Ïöî.",
                                        Toast.LENGTH_LONG
                                    ).show()
                                    auth.signOut() // Í∞ïÏ†ú Î°úÍ∑∏ÏïÑÏõÉ
                                } else {
                                    // üîê ÏûêÎèô Î°úÍ∑∏Ïù∏ Ï†ïÎ≥¥ Ï†ÄÏû•
                                    val sharedPref = getSharedPreferences("MyApp", MODE_PRIVATE)
                                    with(sharedPref.edit()) {
                                        putBoolean("autoLogin", checkBoxAutoLogin.isChecked)
                                        putString("userEmail", strEmail)
                                        putString("userPassword", strPwd)
                                        apply()
                                    }

                                    Toast.makeText(this, "Î°úÍ∑∏Ïù∏Ïóê ÏÑ±Í≥µÌïòÏÖ®ÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show()
                                    startActivity(Intent(this, RouteTime::class.java))
                                    finish()
                                }
                            }.addOnFailureListener {
                                Toast.makeText(this, "Ïú†Ï†Ä Ï†ïÎ≥¥ ÌôïÏù∏ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.", Toast.LENGTH_SHORT)
                                    .show()
                            }
                        }
                    }
                }
        }

        // ÌöåÏõêÍ∞ÄÏûÖ Î≤ÑÌäº ‚Üí RegisterActivity Ïù¥Îèô
        mBtnRegister.setOnClickListener {
            startActivity(Intent(this, Register::class.java))
            finish()
        }

        // Îí§Î°ú Îëê Î≤à ÎàÑÎ•¥Î©¥ Ïï± Ï¢ÖÎ£å
        onBackPressedDispatcher.addCallback(this, object : OnBackPressedCallback(true) {
            override fun handleOnBackPressed() {
                if (doubleBackToExitPressedOnce) {
                    finishAffinity()
                    return
                }

                doubleBackToExitPressedOnce = true
                Toast.makeText(this@Login, "Ìïú Î≤à Îçî ÎàÑÎ•¥Î©¥ Ïï±Ïù¥ Ï¢ÖÎ£åÎê©ÎãàÎã§.", Toast.LENGTH_SHORT).show()

                Handler(Looper.getMainLooper()).postDelayed({
                    doubleBackToExitPressedOnce = false
                }, 2000)
            }
        })
    }
    private fun loginUser(email: String, password: String){
        auth.signInWithEmailAndPassword(email, password)
            .addOnCompleteListener(this) { task ->
                val progressBar = findViewById<ProgressBar>(R.id.progressBar)
                progressBar.visibility = View.GONE //Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ Î∞îÎ°ú Ï†ÑÏóê Î°úÎî© ÏïÑÏù¥ÏΩò Ïà®ÍπÄ Ï≤òÎ¶¨
                if(task.isSuccessful){
                    Toast.makeText(this, "Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!", Toast.LENGTH_SHORT).show()
                    startActivity(Intent(this, RouteTime::class.java))
                    finish()
                } else {
                    Toast.makeText(this, "Î°úÍ∑∏Ïù∏ Ïã§Ìå®: ${task.exception?.message}", Toast.LENGTH_SHORT).show()
                }
            }
    }
}